# 修改bc.txt里面的202220等序号改为tbc1-xxx
import os


def count_barcode_type(bc_txt_dir):
    barcode_name = """220000
    220001
    220010
    220011
    220100
    220101
    220110
    220111
    221000
    221001
    221010
    221011
    221100
    221101
    221110
    221111
    202000
    202001
    202010
    202011
    202100
    202101
    202110
    202111
    212000
    212001
    212010
    212011
    212100
    212101
    212110
    212111
    200200
    200201
    200210
    200211
    201200
    201201
    201210
    201211
    210200
    210201
    210210
    210211
    211200
    211201
    211210
    211211
    200020
    200021
    200120
    200121
    201020
    201021
    201120
    201121
    210020
    210021
    210120
    210121
    211020
    211021
    211120
    211121
    200002
    200012
    200102
    200112
    201002
    201012
    201102
    201112
    210002
    210012
    210102
    210112
    211002
    211012
    211102
    211112
    022000
    022001
    022010
    022011
    022100
    022101
    022110
    022111
    122000
    122001
    122010
    122011
    122100
    122101
    122110
    122111
    020200
    020201
    020210
    020211
    021200
    021201
    021210
    021211
    120200
    120201
    120210
    120211
    121200
    121201
    121210
    121211
    020020
    020021
    020120
    020121
    021020
    021021
    021120
    021121
    120020
    120021
    120120
    120121
    121020
    121021
    121120
    121121
    020002
    020012
    020102
    020112
    021002
    021012
    021102
    021112
    120002
    120012
    120102
    120112
    121002
    121012
    121102
    121112
    002200
    002201
    002210
    002211
    012200
    012201
    012210
    012211
    102200
    102201
    102210
    102211
    112200
    112201
    112210
    112211
    002020
    002021
    002120
    002121
    012020
    012021
    012120
    012121
    102020
    102021
    102120
    102121
    112020
    112021
    112120
    112121
    002002
    002012
    002102
    002112
    012002
    012012
    012102
    012112
    102002
    102012
    102102
    102112
    112002
    112012
    112102
    112112
    000220
    000221
    001220
    001221
    010220
    010221
    011220
    011221
    100220
    100221
    101220
    101221
    110220
    110221
    111220
    111221
    000202
    000212
    001202
    001212
    010202
    010212
    011202
    011212
    100202
    100212
    101202
    101212
    110202
    110212
    111202
    111212
    000022
    000122
    001022
    001122
    010022
    010122
    011022
    011122
    100022
    100122
    101022
    101122
    110022
    110122
    111022
    111122
    212210
    122102
    022012
    122211
    211221
    210122
    222101
    212002
    211212
    121212
    221210
    121202
    022211
    101222
    122002
    202201
    122200
    202112
    120122
    122120
    220121
    102202
    022121
    220012
    120022
    001222
    020122
    211202
    102122
    202012
    012122
    120220
    112220
    200022
    122021
    221211
    222100
    012212
    201220
    202200
    002221
    020212
    011222
    221120
    111222
    212021
    221200
    200221
    012221
    220002
    021212
    200220
    222110
    020022
    202102
    022200
    022020
    102022
    210212
    202020
    211022
    202021
    020220
    210221
    221112
    110222
    212112
    022021
    022201
    222000
    220102
    201221
    010121
    020110
    011112
    012010
    020011
    201100
    100210
    011021
    100021
    101102
    010002
    110112
    000201
    112001
    001021
    001200
    001112
    102001
    011210
    001102
    210011
    111200
    100201
    010210
    120001
    120100
    110102
    110120
    012000
    101121
    201010
    100020
    210100
    120010
    120101
    201011
    010112
    112101
    111002
    102101
    112000
    002011
    101012
    002010
    020111
    002110
    121100
    002101
    100121
    211001
    011121
    001020
    002000
    021111
    110020
    111020
    121011
    211011
    210001
    011012
    010201
    200101
    121101
    201110
    210110
    201111
    021010
    100112
    010200
    111210
    101200
    000210
    """
    barcode_name = barcode_name.split()

    barcode_num = [["tbc1-{}".format(i + 1) for i in range(384)],
                   ["tbc2-{}".format(i + 1) for i in range(384)],
                   ["tbc3-{}".format(i + 1) for i in range(384)]]

    barcode_name_dict = [{}, {}, {}]
    for k in range(3):
        for i in range(384):
            barcode_name_dict[k][barcode_name[i]] = barcode_num[k][i]

    for bc_num in range(1, 4):
        bc_path = os.path.join(bc_txt_dir, "bc_{}.txt".format(bc_num))
        barcode_dict = barcode_name_dict[bc_num - 1]

        with open(bc_path, 'r') as fp:
            tmp_txt = fp.read()


        tmp_txt = tmp_txt.split("\n")
        if tmp_txt[-1] == '':
            tmp_txt.pop()

        ans_txt = []
        for i in range(384):
            bc_name = tmp_txt[i][:6]
            ans_txt.append(tmp_txt[i].replace(bc_name, "{}\t{}".format(bc_name, barcode_dict[bc_name])))
        save_txt = "\n".join(ans_txt)
        with open(bc_path, 'w') as fp:
            fp.write(save_txt)


def analyze_less_bc(bc_txt_dir):
    for bc_num in range(1, 4):
        bc_path = os.path.join(bc_txt_dir, "bc_{}.txt".format(bc_num))
        with open(bc_path, 'r') as fp:
            ans_txt = fp.read()

        ans_dict = {x[:6]: x[6:] for x in ans_txt.split("\n")}
        less_bc = ans_txt.split("\n")[:60]  # 取最少的20个分析

        analyze_result = []
        for bc in less_bc:
            bc_type, t_bc_num, num = bc.split("\t")
            analyze_result.append(bc)
            for i in range(6):
                change_bc_1 = bc_type[i]
                if change_bc_1 == "2":
                    continue
                change_bc = [x for x in bc_type]
                change_bc[i] = "2"
                change_bc = "".join(change_bc)
                if change_bc in ans_dict:
                    analyze_result.append(change_bc + ans_dict[change_bc])

            analyze_result.append("")  # 加一个换行

        save_analyze_txt = "\n".join(analyze_result)
        bc_analyze_path = os.path.join(bc_txt_dir, "bc_{}_analyze.txt".format(bc_num))
        with open(bc_analyze_path, 'w') as fp:
            fp.write(save_analyze_txt)
    pass


def check_data_available(data, barcode_name):
    if len(data) != 18:
        return False
    for i in range(3):
        if data[6*i: 6*i+6] not in barcode_name:
            return False
    return True


if __name__ == '__main__':
    bc_txt_dir = r"E:\biomarker_data\flour_1\chip_182_project\final_signal"
    # count_barcode_type(bc_txt_dir)
    # analyze_less_bc(bc_txt_dir)

    barcode_name = """220000
    220001
    220010
    220011
    220100
    220101
    220110
    220111
    221000
    221001
    221010
    221011
    221100
    221101
    221110
    221111
    202000
    202001
    202010
    202011
    202100
    202101
    202110
    202111
    212000
    212001
    212010
    212011
    212100
    212101
    212110
    212111
    200200
    200201
    200210
    200211
    201200
    201201
    201210
    201211
    210200
    210201
    210210
    210211
    211200
    211201
    211210
    211211
    200020
    200021
    200120
    200121
    201020
    201021
    201120
    201121
    210020
    210021
    210120
    210121
    211020
    211021
    211120
    211121
    200002
    200012
    200102
    200112
    201002
    201012
    201102
    201112
    210002
    210012
    210102
    210112
    211002
    211012
    211102
    211112
    022000
    022001
    022010
    022011
    022100
    022101
    022110
    022111
    122000
    122001
    122010
    122011
    122100
    122101
    122110
    122111
    020200
    020201
    020210
    020211
    021200
    021201
    021210
    021211
    120200
    120201
    120210
    120211
    121200
    121201
    121210
    121211
    020020
    020021
    020120
    020121
    021020
    021021
    021120
    021121
    120020
    120021
    120120
    120121
    121020
    121021
    121120
    121121
    020002
    020012
    020102
    020112
    021002
    021012
    021102
    021112
    120002
    120012
    120102
    120112
    121002
    121012
    121102
    121112
    002200
    002201
    002210
    002211
    012200
    012201
    012210
    012211
    102200
    102201
    102210
    102211
    112200
    112201
    112210
    112211
    002020
    002021
    002120
    002121
    012020
    012021
    012120
    012121
    102020
    102021
    102120
    102121
    112020
    112021
    112120
    112121
    002002
    002012
    002102
    002112
    012002
    012012
    012102
    012112
    102002
    102012
    102102
    102112
    112002
    112012
    112102
    112112
    000220
    000221
    001220
    001221
    010220
    010221
    011220
    011221
    100220
    100221
    101220
    101221
    110220
    110221
    111220
    111221
    000202
    000212
    001202
    001212
    010202
    010212
    011202
    011212
    100202
    100212
    101202
    101212
    110202
    110212
    111202
    111212
    000022
    000122
    001022
    001122
    010022
    010122
    011022
    011122
    100022
    100122
    101022
    101122
    110022
    110122
    111022
    111122
    212210
    122102
    022012
    122211
    211221
    210122
    222101
    212002
    211212
    121212
    221210
    121202
    022211
    101222
    122002
    202201
    122200
    202112
    120122
    122120
    220121
    102202
    022121
    220012
    120022
    001222
    020122
    211202
    102122
    202012
    012122
    120220
    112220
    200022
    122021
    221211
    222100
    012212
    201220
    202200
    002221
    020212
    011222
    221120
    111222
    212021
    221200
    200221
    012221
    220002
    021212
    200220
    222110
    020022
    202102
    022200
    022020
    102022
    210212
    202020
    211022
    202021
    020220
    210221
    221112
    110222
    212112
    022021
    022201
    222000
    220102
    201221
    010121
    020110
    011112
    012010
    020011
    201100
    100210
    011021
    100021
    101102
    010002
    110112
    000201
    112001
    001021
    001200
    001112
    102001
    011210
    001102
    210011
    111200
    100201
    010210
    120001
    120100
    110102
    110120
    012000
    101121
    201010
    100020
    210100
    120010
    120101
    201011
    010112
    112101
    111002
    102101
    112000
    002011
    101012
    002010
    020111
    002110
    121100
    002101
    100121
    211001
    011121
    001020
    002000
    021111
    110020
    111020
    121011
    211011
    210001
    011012
    010201
    200101
    121101
    201110
    210110
    201111
    021010
    100112
    010200
    111210
    101200
    000210
    """
    barcode_name = barcode_name.split()
    barcode_num = [["tbc1-{}".format(i + 1) for i in range(384)],
                   ["tbc2-{}".format(i + 1) for i in range(384)],
                   ["tbc3-{}".format(i + 1) for i in range(384)]]

    barcode_name_dict = [{}, {}, {}]
    for k in range(3):
        for i in range(384):
            barcode_name_dict[k][barcode_name[i]] = barcode_num[k][i]

    for bc_num in range(1, 4):
        bc_path = os.path.join(bc_txt_dir, "bc_{}.txt".format(bc_num))
        barcode_dict = barcode_name_dict[bc_num - 1]
    barcode_name = set(barcode_name)

    ori_txt_path = bc_txt_dir + ".txt"
    with open(ori_txt_path, 'r') as fp:
        ori_txt = fp.read()
    ori_data = ori_txt.split()
    ori_data_right = [data for data in ori_data if check_data_available(data, barcode_name)]

    # 统计重复
    ori_data_right_dict = {}
    for data in ori_data_right:
        if data in ori_data_right_dict:
            ori_data_right_dict[data] += 1
        else:
            ori_data_right_dict[data] = 1

    result = [[my_key, my_value] for my_key, my_value in ori_data_right_dict.items()]
    result.sort(key=lambda x: x[1], reverse=True)

    # 统计重复barcode信息
    wrong_bc = []
    for bc in result:
        if bc[1] > 1:
            tmp_line = []
            tmp_line.append(bc[0])
            tmp_line.append(str(bc[1]))

            bc_18 = bc[0]
            for i in range(3):
                tmp_bc = bc_18[i*6: i*6 + 6]
                tmp_line.append(barcode_name_dict[i][tmp_bc])
            tmp_line_txt = "\t".join(tmp_line)
            wrong_bc.append(tmp_line_txt)

    wrong_bc_txt = "\n".join(wrong_bc)
    save_txt_path = bc_txt_dir + "wrong_bc_analyze.txt"
    with open(save_txt_path, "w") as fp:
        fp.write(wrong_bc_txt)
